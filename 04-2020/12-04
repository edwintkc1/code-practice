// codeforces 263A
// #33
// input a 5x5 matrix, with 24 zeros and 1 one. Someont think that if that 1 in the middle of matrix, it means beautiful.
// you can move the 1 by swithcing its col or row. Count the least time you need in order to swith it to the middle.
// input: 0 0 0 0 0
          0 0 0 0 1
          0 0 0 0 0
          0 0 0 0 0
          0 0 0 0 0
// output:3

// just count the difference of coordiante 1 and middle(3,3)

#include <iostream>
#include <cmath>
using namespace std;

int matrix[5][5] = { 0 };
int x, y, ans;
int main() {
	for (int i = 1; i <= 5; i++)
		for (int j = 1; j <= 5; j++) 
			cin >> matrix[i][j];
		
	for(int i =1;i<=5;i++)
		for(int j=1;j<=5;j++)
			if (matrix[i][j] == 1) {
				x = i;
				y = j;
			}
	ans = abs(3 - x) + abs(3 - y);
	cout << ans;

	return 0;
}

----------------------------------------------------------------------------------------------------------------------
// codeforces 266B
// #34
// queue in school. input n and k , n = number of children, k = after k second. Also input a string with B and G,
// represent the gender of n children.
// in current second, if i position is a B, and i-1 position is a G, change it in the next second.

// when it comes to even second, no changes
// just use the condition 

#include <iostream>
using namespace std;

int n, t;
string input;
int main() {
	cin >> n >> t >> input;
	while (t--) {
		for (int i = 1; i < n; i++) {
			if (input[i] == 'G' && input[i - 1] == 'B') {
				input[i] = 'B';
				input[i - 1] = 'G';
				i++;
			}
		}
	}
	cout << input;
	return 0;
}

----------------------------------------------------------------------------------------------------------------------
// codeforces 32B
// #35
// 摩斯密碼,   .  represent 0 ,  .- represent 1,   -- represent 2
// input a code, decode it as number
// input: .-.--
// output:012
// input: --.
// output:20

#include <iostream>
using namespace std;

string s, ans;
int i;
int main() {
	cin >> s;
	while (i != s.length()) {
		if (s[i] == '.') {
			ans += '0';
			i++;
		}
		if (s[i] == '-' && s[i + 1] == '.') {
			ans += '1';
			i+=2;
		}
		if (s[i] == '-' && s[i + 1] == '-') {
			ans += '2';
			i+=2;
		}
	}
	cout << ans;
	return 0;
}


