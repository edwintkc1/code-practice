// codeforces 146A
// #50
// input a string type name. count how many distinct chars in the name. 
// if the number of distinct chars is odd, he is a male, otherwise, female.
// cout IGNORE HIM! when he is a male, cout CHAT WITH HER! when she is a female.

// 1. put all char into a array, array = {0}.
// 2. same char have the same array index, so count how many number != 0 means you get how many distinct chars
// 3. odd or even

#include <iostream>
using namespace std;

int main() {
	string s;
	cin >> s;
	int a[26] = { 0 }, count = 0;
	for (int i = 0; i < s.length();i++) {
		a[s[i]-'a'] = s[i];
	}
	for (int i = 0; i < 26; i++) {
		if (a[i] != 0)
			count++;
	}
	if (count % 2 == 0)
		cout << "CHAT WITH HER!";
	else
		cout << "IGNORE HIM!";
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// codeforces 85A
// #51
// input 2 string, each consists of uppercase of lowercase char.
// consider uppercase char = lowercase char  , ie, 'A' = 'a'
// if they are the same, cout 0, if str1 > str2, cout 1, if str2 > str1, cout -1

// 我嘅做法係首先將char的數值加到cnt1,cnt2中，再比較
// 但並不實用，下面嘅做法最好
// 因為uppercase = lowercase，咁將所有char轉曬做lowercase先
// 佢要嘅output其實同strcmp (string compare) 一樣
// 都係return 0， 1 ，-1   
// 直接用呢個function, 要include cstring

#include <iostream>
#include <cstring>
using namespace std;

int main() {
	string s1, s2;
	cin >> s1 >> s2;
	int cnt1 = 0, cnt2 = 0;
	for (int i = 0; i < s1.length(); i++) {
		s1[i] = tolower(s1[i]);
	}
	for (int i = 0; i < s2.length(); i++) {
		s2[i] = tolower(s2[i]);
	}
	cout << strcmp(s1.c_str(), s2.c_str());

	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// codeforces 231A
// #52
// 3 ppl go to a contest. There are n problems in the contest.
// if at least 2 of them know the solution, they could submit the right answer of that question.
// now input number n, in line 1 to line n, input a, b, c, which contains 0 or 1
// 1 means he/she knows the solution of that problem
// input: 3
	  1 1 0
	  1 1 1
	  1 0 0
// output:2

#include <iostream>
using namespace std;

int main() {
	int n;
	cin >> n;
	int a, b, c;
	int cnt = 0;
	while (n--) {
		cin >> a >> b >> c;
		if (a + b + c >= 2)
			cnt++;
	}
	cout << cnt;

	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// codeforces 282A
// #53
// ouput the finally value of x, the initial value of x is 0
// input n, then input the operation, you could input X++, ++X, X-- ,--X
// input: 2
	  X++
	  --X
// output:0

#include <iostream>
using namespace std;

int main() {
	int n;
	cin >> n;
	string s;
	int add = 0, sub = 0;
	while (n--) {
		cin >> s;
		if (s == "X++" || s == "++X")
			add++;
		if (s == "X--" || s == "--X")
			sub++;
	}
	cout << add - sub;

	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// codeforces 272A
// #54
// 小明有n個朋友，玩緊點止兵兵，輸左嘅人執屋，每個朋友可以出1-5之內嘅數，再加小明自己出嘅數(1-5)，就係點止兵兵嘅次數
// 例如有2個fds，出3,5   如果小明出1, sum = 9，咁就係第二個朋友執屋
// 次序為小明(1,4,7) -> 1st fd(2,5,8) -> 2nd fd(3,6,9)
// 但如果小明出2,5 (sum = 10, 13)，就係小明執屋
// 但小明唔想執屋，究竟係1-5入面，有幾多個數出左之後佢唔洗執屋？
// input: 2
	  3 5
// output:3

// 如果小明係1，二個fd分別係2,3
// 只要將sum % n+1 個人 (n個fds再加小明自己)，唔等於1，果個就可以當一個possible case

#include <iostream>
using namespace std;
#define ll long long

int main() {
	int n, sum = 0, cnt = 0;
	cin >> n;
	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		sum += x;
	}
	for (int i = 1; i <= 5; i++) {
		if (((i + sum) % (n + 1)) != 1)
			cout << i << endl;
			cnt++;
	}
	cout << cnt;

	return 0;
}


