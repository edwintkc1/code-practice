#include <iostream>
using namespace std;

void walk(int, int, int, int, int, int&);
int** maze, ** visited;                                        // visited array for record
int result = 0;

int main() {
	int size, x = 0, y = 0, endX, endY;                      //(x,y) is start point, (endX,endY) is end point
	cout << "Input the size of the maze:\n";
	cin >> size;
	cout << "Input the coordinate of the exit:\n";
	cin >> endX >> endY;

	maze = new int* [size];									 //create a maze
	for (int i = 0; i < size; i++)
		maze[i] = new int[size];
	cout << "Input the structure of the maze:\n";
	for (int i = 0; i < size; i++)                                 //assign value
		for (int j = 0; j < size; j++)
			cin >> maze[i][j];

	visited = new int* [size];                                 //create a visited array, initial value = { 0 }
	for (int i = 0; i < size; i++)
		visited[i] = new int[size];
	for (int i = 0; i < size; i++)
		for (int j = 0; j < size; j++)
			visited[i][j] =  0 ;

	walk(x, y, endX, endY, size, result);
	if (result == 0)
		cout << "There is no way to get to the exit!\n";        //result = 0 means no road
	else
		cout << "Congratulation! You can get to the exit!\n";//result != 0 means could get to the exit

	for (int i = 0; i < size; i++) {
		delete[]maze[i];
		delete[]visited[i];
	}
	delete[]maze;
	delete[]visited;
	return 0;
}

void walk(int x, int y, int endX, int endY, int size, int &result) {
	if (x == endX && y == endY) {
		result = 1;
	}
	else {
		visited[x][y] = 1;                                                          //record current coordinate every time

		// if have not been to next coordinate, check the boundary and do somthing
		if (y != size - 1) {
			if (maze[x][y + 1] == 1 && visited[x][y + 1] == 0)      //go right
				walk(x, y + 1, endX, endY, size, result);
		}
		if (x != size - 1) {
			if (maze[x + 1][y] == 1 && visited[x + 1][y] == 0)      //go down
				walk(x + 1, y, endX, endY, size, result);
		}
		if (y != 0) {
			if (maze[x][y - 1] == 1 && visited[x][y - 1] == 0)       //go left
				walk(x, y - 1, endX, endY, size, result);
		}
		if (x != 0) {
			if (maze[x - 1][y] == 1 && visited[x - 1][y] == 0) {   //go up
				walk(x - 1, y, endX, endY, size, result);
			}
		}
		//when it comes to last step, means all direction is denied
		//set current coordinate to 0, indicates that current coordinate has no road
		maze[x][y] = 0;
	}
}


//test
//1 0 0 1 0
//1 1 1 1 0
//0 1 1 0 1
//0 0 0 0 1
//0 1 1 1 1


//1 0 0 1 0 0 1
//1 1 1 1 0 1 1
//0 1 0 1 1 0 1
//0 0 0 0 1 1 1
//0 1 1 1 1 0 0
//1 1 0 0 0 1 0
//0 0 1 1 1 1 1
