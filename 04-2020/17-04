// 雜題
// #601
// delete char in a string. input a string, and a char.
// delete that char in the string. If there are mutilple char in the string, delete all
// input: Enter the input string: we are happy
//        Enter the input delete_char: _      //input a space (_ means space in this case)
// output:The modified string is: wearehappy

#include <iostream>
using namespace std;
#define LL long long

char* deleteStr(char* str, char delete_char) {
	int index = 0;
	char* result = new char[101];
	for (int i = 0; i < strlen(str); i++) {
		if (str[i] == delete_char)
			continue;

		result[index] = str[i];
		index++;
	}
	result[index] = '\0';     //add the end char to result
	return result;
}

int main() {
	char input[101];
	char delete_char;
	cout << "Enter the input string: ";
	cin.getline(input, 101);
	cout << "Enter the input delete_char: ";
	cin.get(delete_char);
	cout << "The modified string is: ";

	char* result = deleteStr(input, delete_char);
	cout << result;
	delete[]result;
	
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 雜題
// #61
// similiar to the above question
// but this time not delete a char in the string
// input a sentence, there are spaces between string
// now input a string to fill all the spaces
// input: Enter the input string: count the number of char_
	  Enter the input space str: &&&
// output:The modified string is: &&&count&&&the&&&number&&&of&&&char&&&

#include <iostream>
using namespace std;
#define LL long long

char* replace(char* str, char* space) {
	int len1 = 0;
	int len2 = 0;
	int count_space = 0;

	while (str[len1] != '\0') {
		if (str[len1] == ' ') {
			count_space++;
		}
		len1++;
	}
	while (space[len2] != '\0') {
		len2++;
	}
	char* result = new char[len1 + count_space * (len2 - 1) + 1];

	int j = 0;
	for (int i = 0; i < len1; i++) {
		if (str[i] == ' ') {
			for (int k = 0; k < len2; k++) {
				result[j] = space[k];
				j++;
			}
		}
		else {
			result[j] = str[i];
			j++;
		}
	}
	result[len1 + count_space * (len2 - 1)] = '\0';
	cout << result << endl;
	return 0;
}

int main() {

	char input[101];
	char space[101];
	char *result = NULL;
	cout << "Enter the input string: ";
	cin.getline(input, 101);
	cout << "Enter the input space str: ";
	cin.getline(space,101);
	cout << "The modified string is: ";
	result = replace(input, space);

	delete[] result;

	return 0;
}
