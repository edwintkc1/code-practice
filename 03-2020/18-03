// 洛谷 新手村
// #10
// P1146
// flip n coins, input integer n(<100, even) to be number of coins. You could flip n-1 coins everytime
// e.g If n = 4, flip 3 coins each time.
// count the least possible rounds such that all coins are flipped.
// all coins should have initial value 0 and final value 1.
// the first output is number of round needed. The remaining part is status of those coins.
// input: 4
// output:4
          0111
          1100
          0001
          1111

#include <iostream>
using namespace std;

int main()
{
	int n, ans, a[150] = { 0 };
	cin >> n;
	cout << n << endl;                     //flip n-1 coins = flip 1 coin, then number of rounds must equals to how many coins.
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {       //0000 everytime flip tha last three coins
			if (j != i) {                      //0111 flip 234 , 1st time, skip 1
				if (a[j] == 0) a[j] = 1;         //1100 flip 341 , 2nd time, skip 2
				else a[j] = 0;                   //0001 flip 412 , 3rd time, skip 3
			}                                  //1111 flip 123, xth time, skip x
			cout << a[j];
		}                                              
		cout << endl;
	}
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 洛谷 新手村
// #11
// P1046
// Mary want to pick some apples from the tree. Assume there are 10 apples in the tree, when apples are ready for pick, 
// Mary will try to pick it without any tool. If Mary cannot reaches the apple, she will use a chair(30cm) to help her.
// input 10 data, height of apples, and height of Mary. Output how many apples she could pick.
// input: 100 200 150 140 129 134 167 198 200 111
          110
// output:5

#include <iostream>
using namespace std;

int main()
{
	int a[10], height,ans=0;
	for (int i = 0; i < 10; i++) {
		cin >> a[i];
	}
	cin >> height;
	height += 30;
	for (int i = 0; i < 10; i++) {
		if (a[i] <= height)
			ans++;
	}
	cout << ans << endl;
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 洛谷 新手村
// #12
// P1428
// Input size of array, then input each data. For array index = n, count how many data in array index < n is smaller than
// data in array index n
// given n <=100
// input: 6
	  4 3 0 5 1 2
// output:0 0 0 3 1 2

#include <iostream>
using namespace std;

int main()
{
	int a[101], b[101], n, temp=0;
	cin >> n;
	for (int i = 1; i <= n; i++) {        
		cin >> a[i];        //4 3 0 5 1 2
		for (int j = 1; j < i; j++) {
			if (a[j] < a[i]) { 
				temp++;
			}
		}
		b[i] = temp;
		temp = 0;     //reset
		cout << b[i] << " ";
	}

	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 洛谷 新手村
// #13
// P2141
// Input size of array(3<=n<=100), then input each data (data needs to be different, data<=10000)
// count if there is any number of the array equals to sum of any other two numbers of the array.
// duplicated case need to be canceled , eg 1+4 =5, 2+3 = 5, but we only count it one time as they all equals to 5.
// input: 4
	  1 2 3 4
// output:2

#include <iostream>
using namespace std;

int main()
{
	int n, a[100], b[100] = { 0 }, ans = 0;    // array b for checking duplicated case, initial value=0 means not yet count
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];                   
	}
	for (int i = 0; i < n; i++) {  
		for (int j = i + 1; j < n; j++) {     // just sum 2 numbers
			for (int k = 0; k < n; k++) { // see if their sum euqals to any other number in the array
				if (a[k] == a[i] + a[j] && b[k]==0) {  // if yes, and no duplicated case, ans++
					ans++; 
					b[k] = 1;
				}
			}
		}
	}
	cout << ans << endl;
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 洛谷 新手村
// #14
// P1567
// count how many consecutive increase of number in the array. Input size of array n(n<=10000000), input data.
// output maximum consecutive increase.
// input: 10
          1 2 3 2 4 5 6 8 5 9
// output:5

#include <iostream>
using namespace std;

int main()
{
	static int a[10000000]; //prevent stack overflow, set it to global array
	int n, temp = 0, max = 0;
	cin >> n;
	for (int i = 0; i < n; i++) 
		cin >> a[i]; 
	for (int i = 0; i < n; i++) {
		if (a[i] < a[i + 1])    //campare current data and next data
			temp++;         //if next data> current data, means temperature increase, then temp++
		else
			temp = 0;	//if nex data < current data, means decrease, clear temp
		if (temp > max)     
			max = temp;     
	}
	cout << max+1 << endl;
	return 0;
}
----------------------------------------------------------------------------------------------------------------------
// 洛谷 新手村
// #15
// P1200
// input 2 names, both in capital letters, with A = 1, B = 2,..., Z = 26
// After converting 2 names to integer, if the 2 value % 47 equals to each other, cout GO, else cout STAY

#include <iostream>
#include <string>
using namespace std;

int main()
{
	string ufo, team;
	int ufo_ans = 1, team_ans = 1;
	cin >> ufo >> team;
	for (int i = 0; i < ufo.length(); i++) 
		ufo_ans *= ufo[i] - '@';   //In ASCII, A = 65, @ = 64, if we treat A=1, B=2, we need to subtract 64
	for (int i = 0; i < team.length(); i++)
		team_ans *= team[i] - '@';
	if (team_ans % 47 == ufo_ans % 47)
		cout << "GO" << endl;
	else
		cout << "STAY" << endl;
	return 0;
}



